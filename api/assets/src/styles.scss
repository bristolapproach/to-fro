// Abstract elements like functions, variables and mixins
@import 'styles/abstract/index';

// Generic styles
@import 'styles/generic/bootstrap';
@import 'styles/generic/space';

svg {
  fill: currentColor;
}

input[type=number] {
  -moz-appearance: textfield;
}

:last-child {
  margin-bottom: 0;
}

.appearance-none {
  appearance:none;
}

.rotate-90 {
  transform: rotate(90deg);
}

// Set a minimum size to the navigation links
.navbar .nav-link {
  line-height: (40rem / 16)
}

// Components

.container--small {
  max-width: (600rem / 16);
}

.btn-icon-only {
  > svg,
  > img {
    display: block;
  }

  height: auto;
  padding: map-get($spacers, 2);
}

.align-icon {
  position: relative;
  bottom: (2em/16);
}

.text-with-icon>svg {
  position: relative;
  bottom: (2em/16);
}

.with-decorative-button {
  &:hover {
    .with-decorative-button__button {
      @each $color-name, $color-value in $theme-colors {
        &.btn-outline-#{$color-name} {
          background-color: $color-value;
          color: color-yiq($color-value);
        }
      }
    }
  }
}

.card-footer {
  
  [class*="btn-outline"] {
    background-color: white;
  }

  @each $color-name,$color-value in $theme-colors {
    .btn-outline-#{$color-name} {
      &:hover {
        color: $color-value;
        text-decoration: underline;
      }
    }
  }
}

.action-list-item{
  position: relative;
  padding-left: map-get($spacers, 4) + map-get($spacers, 1);
  padding-right: map-get($spacers, 4) + map-get($spacers, 1);
}

.action-list-item__icon {
  position: absolute;
  right: 100%;
  top: 50%;
  transform: translate(50%, -50%);
  background-color: white;
  border: solid 1px #dfdfdf;
  border-radius: 100%;
  color: #666;
}

.action-list-item__shortcut {
  position: absolute;
  left: 100%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.action-list-item__icon svg {
  width: 0.9em;
  height: 0.9em;
}
