# Generated by Django 3.0.5 on 2020-04-25 21:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HelpType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('phone_number_primary', models.CharField(help_text='Main phone number for the user.', max_length=15, null=True)),
                ('phone_number_secondary', models.CharField(help_text='Secondary phone number for the user.', max_length=15, null=True)),
                ('email_primary', models.CharField(help_text='Main email for the user.', max_length=15, null=True)),
                ('email_secondary', models.CharField(help_text='Secondary email for the user.', max_length=15, null=True)),
                ('notes', models.CharField(help_text='Any other notes?', max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Helper',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.User')),
                ('user_type', models.CharField(default='helper', max_length=20, null=True)),
                ('dbs_number', models.CharField(help_text="The user's DBS certificate number, if they have one.", max_length=12, null=True)),
                ('access_to_car', models.BooleanField(help_text='Does this person have access to a car?', null=True)),
                ('driving_license', models.BooleanField(help_text='Does this person have a driving license?', null=True)),
                ('ts_and_cs_confirmed', models.BooleanField(help_text='Has this person agreed to the terms and conditions?', null=True)),
                ('health_checklist_received', models.BooleanField(help_text='Have we received their health checklist?', null=True)),
                ('key_worker', models.BooleanField(help_text='Have we received their key worker letter?', null=True)),
                ('id_received', models.BooleanField(help_text='Have we received a copy of their ID?', null=True)),
                ('reference_details', models.CharField(max_length=250, null=True)),
                ('available_mon_morning', models.BooleanField(null=True)),
                ('available_mon_afternoon', models.BooleanField(null=True)),
                ('available_mon_evening', models.BooleanField(null=True)),
                ('available_tues_morning', models.BooleanField(null=True)),
                ('available_tues_afternoon', models.BooleanField(null=True)),
                ('available_tues_evening', models.BooleanField(null=True)),
                ('available_wed_morning', models.BooleanField(null=True)),
                ('available_wed_afternoon', models.BooleanField(null=True)),
                ('available_wed_evening', models.BooleanField(null=True)),
                ('available_thur_morning', models.BooleanField(null=True)),
                ('available_thur_afternoon', models.BooleanField(null=True)),
                ('available_thur_evening', models.BooleanField(null=True)),
                ('available_fri_morning', models.BooleanField(null=True)),
                ('available_fri_afternoon', models.BooleanField(null=True)),
                ('available_fri_evening', models.BooleanField(null=True)),
                ('available_sat_morning', models.BooleanField(null=True)),
                ('available_sat_afternoon', models.BooleanField(null=True)),
                ('available_sat_evening', models.BooleanField(null=True)),
                ('available_sun_morning', models.BooleanField(null=True)),
                ('available_sun_afternoon', models.BooleanField(null=True)),
                ('available_sun_evening', models.BooleanField(null=True)),
            ],
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(help_text='When did they first make contact?', null=True)),
                ('user_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_1', to='core.User')),
                ('user_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_2', to='core.User')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(help_text='When was the event?', null=True)),
                ('event_type', models.ForeignKey(help_text='What was the event?', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.EventType')),
                ('user', models.ForeignKey(help_text='Who triggered the event?', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.User')),
            ],
        ),
        migrations.CreateModel(
            name='Requester',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.User')),
                ('user_type', models.CharField(default='requester', max_length=20, null=True)),
                ('address_line_1', models.CharField(help_text='First line of their address.', max_length=100, null=True)),
                ('address_line_2', models.CharField(help_text='Second line of their address.', max_length=100, null=True)),
                ('address_line_3', models.CharField(help_text='Third line of their address.', max_length=100, null=True)),
                ('postcode', models.CharField(help_text='Address postcode.', max_length=100, null=True)),
                ('internet_access', models.BooleanField(help_text='Does this person have internet access?', null=True)),
                ('smart_device', models.BooleanField(help_text='Does this person have a smart device?', null=True)),
                ('confident_online_shopping', models.BooleanField(help_text='Is this person confident online shopping?', null=True)),
                ('confident_online_comms', models.BooleanField(help_text='Is this person confident communicating online?', null=True)),
                ('shielded', models.BooleanField(help_text='Is this person sheilded?', null=True)),
                ('ward', models.ForeignKey(help_text='Which ward is this address in', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Ward')),
            ],
            bases=('core.user',),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_by', models.CharField(help_text="What's your name?", max_length=100, null=True)),
                ('designated_coordinator', models.CharField(help_text='Who will mediate this help?', max_length=100, null=True)),
                ('call_datetime', models.DateTimeField(help_text='What time did you receive the call about the help requested?', null=True)),
                ('call_duration', models.DurationField(help_text='How long was the call?', null=True)),
                ('requested_datetime', models.DateTimeField(help_text='When do they need the help by?', null=True)),
                ('timeTaken', models.DurationField(help_text='How long did it take to help?', null=True)),
                ('notes', models.CharField(help_text='Any other notes?', max_length=500, null=True)),
                ('public_description', models.CharField(help_text='Text that gets displayed to helpers.', max_length=500, null=True)),
                ('job_priority', models.ForeignKey(help_text="What's the priority of the help?", null=True, on_delete=django.db.models.deletion.PROTECT, to='core.JobPriority')),
                ('job_status', models.ForeignKey(help_text="What's the status of the help?", null=True, on_delete=django.db.models.deletion.PROTECT, to='core.JobStatus')),
                ('helper', models.ForeignKey(help_text='Who will help?', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Helper')),
                ('requester', models.ForeignKey(help_text='Who made the request?', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Requester')),
            ],
        ),
        migrations.CreateModel(
            name='HelpPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('help_type', models.ForeignKey(help_text="The type of help they're happy to do.", null=True, on_delete=django.db.models.deletion.PROTECT, to='core.HelpType')),
                ('helper', models.ForeignKey(help_text='The associated user.', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Helper')),
            ],
        ),
        migrations.CreateModel(
            name='HelperWard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward', models.ForeignKey(help_text='A ward that the user can help in.', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Ward')),
                ('helper', models.ForeignKey(help_text='The associated user.', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Helper')),
            ],
        ),
    ]
